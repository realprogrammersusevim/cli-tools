#!/usr/bin/env python3
import argparse
import sys
from pathlib import Path


def search_thesaurus(search_word, thesaurus_path):
    """
    Searches a thesaurus file for a word and yields all its synonyms.

    This function is highly optimized:
    1. It reads the file line-by-line to keep memory usage minimal.
    2. It uses `str.startswith()` for a fast initial check on each line.
    3. It splits the line only once and checks the first element, which is
       more efficient than using regular expressions for this simple case.
    4. It stops processing a line as soon as a mismatch is found.

    Args:
        search_word (str): The word to search for.
        thesaurus_path (Path): The path to the thesaurus file.

    Yields:
        str: A found word or synonym.
    """
    search_prefix = f"{search_word},"

    try:
        with thesaurus_path.open("r", encoding="latin-1") as f:
            for line in f:
                if line.startswith(search_prefix):
                    for word in line.strip().split(","):
                        yield word
                elif line.startswith(search_word):
                    parts = line.strip().split(",", 1)
                    if parts[0] == search_word:
                        for word in line.strip().split(","):
                            yield word

    except FileNotFoundError:
        print(f"Error: Thesaurus file not found at '{thesaurus_path}'", file=sys.stderr)
        sys.exit(1)
    except Exception as e:
        print(f"An error occurred: {e}", file=sys.stderr)
        sys.exit(1)


def main():
    """
    Parses arguments and runs the thesaurus search.
    """
    parser = argparse.ArgumentParser(
        description="Searches a thesaurus file for a word and its synonyms."
    )
    parser.add_argument("search", help="The word to search for.")
    args = parser.parse_args()

    try:
        current_path = Path(__file__).resolve().parent
    except NameError:
        current_path = Path.cwd()

    thesaurus_path = current_path / "deps" / "thesaurii.txt"

    found_words = search_thesaurus(args.search, thesaurus_path)

    for word in found_words:
        print(word)


if __name__ == "__main__":
    main()
